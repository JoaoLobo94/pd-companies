{"ast":null,"code":"import _regeneratorRuntime from\"/Users/joao/Code/DCARP/pd-companies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/joao/Code/DCARP/pd-companies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import\"./App.css\";import LandingPage from\"./pages/LandingPage/LandingPage\";import UserDashboard from\"./pages/UserAreaDashboard/UserDashboard\";import{BrowserRouter,Route,Switch}from\"react-router-dom\";import React from'react';import{useDispatch}from\"react-redux\";import{login}from\"./actions\";import{logout}from\"./actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var dispatch=useDispatch();var isMetamaskWalletConnected=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return window.ethereum._metamask.isUnlocked();case 2:_context.t0=_context.sent;if(!(_context.t0===false)){_context.next=7;break;}dispatch(logout());_context.next=8;break;case 7:dispatch(login());case 8:case\"end\":return _context.stop();}}},_callee);}));return function isMetamaskWalletConnected(){return _ref.apply(this,arguments);};}();React.useEffect(function(){window.addEventListener('DOMContentLoaded',function(){isMetamaskWalletConnected();});});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userArea\",component:UserDashboard})]})})});}export default App;","map":{"version":3,"sources":["/Users/joao/Code/DCARP/pd-companies/src/App.js"],"names":["LandingPage","UserDashboard","BrowserRouter","Route","Switch","React","useDispatch","login","logout","App","dispatch","isMetamaskWalletConnected","window","ethereum","_metamask","isUnlocked","useEffect","addEventListener"],"mappings":"iTAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,WAAP,KAAwB,iCAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yCAA1B,CACA,OAASC,aAAT,CAAwBC,KAAxB,CAA+BC,MAA/B,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,KAAT,KAAsB,WAAtB,CACA,OAASC,MAAT,KAAuB,WAAvB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEA,GAAMK,CAAAA,yBAAyB,0FAAG,yJACtBC,CAAAA,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0BC,UAA1B,EADsB,qDACqB,KADrB,0BAE9BL,QAAQ,CAACF,MAAM,EAAP,CAAR,CAF8B,6BAI9BE,QAAQ,CAACH,KAAK,EAAN,CAAR,CAJ8B,sDAAH,kBAAzBI,CAAAA,yBAAyB,0CAA/B,CAOAN,KAAK,CAACW,SAAN,CAAgB,UAAM,CACpBJ,MAAM,CAACK,gBAAP,CAAwB,kBAAxB,CAA4C,UAAM,CAACN,yBAAyB,GAAG,CAA/E,EAAiF,CADnF,EAGA,mBACE,kCACE,KAAC,aAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEX,WAAjC,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEC,aAAzC,EAFF,GADF,EADF,EADF,CAUD,CAED,cAAeQ,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\nimport UserDashboard from \"./pages/UserAreaDashboard/UserDashboard\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./actions\";\nimport { logout } from \"./actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  \n  const isMetamaskWalletConnected = async () => {\n    if (await window.ethereum._metamask.isUnlocked() === false) {\n      dispatch(logout());\n    }else{\n      dispatch(login())\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener('DOMContentLoaded', () => {isMetamaskWalletConnected()})})\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/userArea\" component={UserDashboard} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}