{"ast":null,"code":"var _jsxFileName = \"/Users/joao/Code/DCARP/pd-companies/src/components/Inputs/MetamaskWalletLogin.js\",\n    _s = $RefreshSig$();\n\nimport \"./MetamaskWalletConnection.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MetamaskWalletConnection = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum == \"undefined\") {\n      console.log(\"Please install metamask\");\n    }\n\n    if (window.ethereum.isMetaMask) {\n      //TODO Implement connect wallet if unconected not just unlock\n      //TODO Implement check if wallet is connect. Emulate uniswap\n      if ((await window.ethereum._metamask.isUnlocked()) === false) {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        dispatch(login());\n        loginUser();\n      } else {\n        loginUser();\n      }\n    }\n  };\n\n  const history = useHistory();\n\n  const loginUser = () => {\n    history.push(\"/userArea\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      id: \"metamask-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MetamaskWalletConnection, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = MetamaskWalletConnection;\nexport default MetamaskWalletConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetamaskWalletConnection\");","map":{"version":3,"sources":["/Users/joao/Code/DCARP/pd-companies/src/components/Inputs/MetamaskWalletLogin.js"],"names":["useHistory","useDispatch","login","MetamaskWalletConnection","dispatch","connectWallet","window","ethereum","console","log","isMetaMask","_metamask","isUnlocked","request","method","loginUser","history","push"],"mappings":";;;AAAA,OAAO,gCAAP;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,eAAtB;;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AACrC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AAEA,QAAMI,aAAa,GAAG,YAAY;AAChC,QAAI,OAAOC,MAAM,CAACC,QAAd,IAA0B,WAA9B,EAA2C;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AACD,QAAIH,MAAM,CAACC,QAAP,CAAgBG,UAApB,EAAgC;AAC9B;AACA;AACA,UAAI,CAAC,MAAMJ,MAAM,CAACC,QAAP,CAAgBI,SAAhB,CAA0BC,UAA1B,EAAP,MAAmD,KAAvD,EAA8D;AAC5D,cAAMN,MAAM,CAACC,QAAP,CAAgBM,OAAhB,CAAwB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAxB,CAAN;AACAV,QAAAA,QAAQ,CAACF,KAAK,EAAN,CAAR;AACAa,QAAAA,SAAS;AACV,OAJD,MAIO;AACLA,QAAAA,SAAS;AACV;AACF;AACF,GAfD;;AAiBA,QAAMC,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMe,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEZ,aAAjB;AAAgC,MAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BD;;GAAMF,wB;UACaF,W,EAmBDD,U;;;KApBZG,wB;AAiCN,eAAeA,wBAAf","sourcesContent":["import \"./MetamaskWalletConnection.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions\";\n\nconst MetamaskWalletConnection = () => {\n  const dispatch = useDispatch();\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum == \"undefined\") {\n      console.log(\"Please install metamask\");\n    }\n    if (window.ethereum.isMetaMask) {\n      //TODO Implement connect wallet if unconected not just unlock\n      //TODO Implement check if wallet is connect. Emulate uniswap\n      if ((await window.ethereum._metamask.isUnlocked()) === false) {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        dispatch(login());\n        loginUser();\n      } else {\n        loginUser();\n      }\n    }\n  };\n\n  const history = useHistory();\n\n  const loginUser = () => {\n    history.push(\"/userArea\");\n  };\n\n  return (\n    <div>\n      <button onClick={connectWallet} id=\"metamask-button\"></button>\n    </div>\n  );\n};\n\nexport default MetamaskWalletConnection;\n"]},"metadata":{},"sourceType":"module"}