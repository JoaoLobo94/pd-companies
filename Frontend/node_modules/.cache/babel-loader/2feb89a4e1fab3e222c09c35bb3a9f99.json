{"ast":null,"code":"var _jsxFileName = \"/Users/joao/Code/DCARP/pd-companies/src/pages/UserAreaDashboard/UserDashboard.js\",\n    _s = $RefreshSig$();\n\nimport \"./UserDashboard.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDashboard = () => {\n  _s();\n\n  const [modalShow, setModalShow] = React.useState(false);\n  const isUnlocked = useSelector(state => state.isloggedWithMetamask);\n\n  if (isUnlocked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  } // Todo: implement modal saying you have to login. reload page live, no hard refresh\n\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserDashboard, \"cUiBATWbBd+TP/LZnNXMtub0v0Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserDashboard;\nexport default UserDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"sources":["/Users/joao/Code/DCARP/pd-companies/src/pages/UserAreaDashboard/UserDashboard.js"],"names":["Redirect","useSelector","UserDashboard","modalShow","setModalShow","React","useState","isUnlocked","state","isloggedWithMetamask"],"mappings":";;;AAAA,OAAO,qBAAP;AACA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,oBAAlB,CAA9B;;AACA,MAAIF,UAAJ,EAAgB;AACd,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GATyB,CAU1B;;;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;GAAML,a;UAEeD,W;;;KAFfC,a;AAcN,eAAeA,aAAf","sourcesContent":["import \"./UserDashboard.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst UserDashboard = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n  const isUnlocked = useSelector((state) => state.isloggedWithMetamask);\n  if (isUnlocked) {\n    return (\n      <div>\n        {/* TODO: Implement conditional and modal if first login */}\n      </div>\n    );\n  }\n  // Todo: implement modal saying you have to login. reload page live, no hard refresh\n  return <Redirect to=\"/\" />;\n};\n\nexport default UserDashboard;\n"]},"metadata":{},"sourceType":"module"}